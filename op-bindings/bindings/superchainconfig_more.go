// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const SuperchainConfigStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/SuperchainConfig.sol:SuperchainConfig\",\"label\":\"_initialized\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint8\"},{\"astId\":1001,\"contract\":\"src/L1/SuperchainConfig.sol:SuperchainConfig\",\"label\":\"_initializing\",\"offset\":1,\"slot\":\"0\",\"type\":\"t_bool\"},{\"astId\":1002,\"contract\":\"src/L1/SuperchainConfig.sol:SuperchainConfig\",\"label\":\"fdgSafetyMode\",\"offset\":2,\"slot\":\"0\",\"type\":\"t_bool\"}],\"types\":{\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_uint8\":{\"encoding\":\"inplace\",\"label\":\"uint8\",\"numberOfBytes\":\"1\"}}}"

var SuperchainConfigStorageLayout = new(solc.StorageLayout)

var SuperchainConfigDeployedBin = "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80636da6635511610076578063bc1f825f1161005b578063bc1f825f1461019c578063c23a451a146101af578063c895d100146101b757600080fd5b80636da66355146101735780637fbf7b6a1461018657600080fd5b8063452a9320116100a7578063452a9320146100e057806354fd4d50146101125780635c975abb1461015b57600080fd5b80633f4ba83a146100c3578063400ada75146100cd575b600080fd5b6100cb6101ca565b005b6100cb6100db3660046108e1565b6102f0565b6100e86104c9565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61014e6040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b604051610109919061099a565b610163610502565b6040519015158152602001610109565b6100cb6101813660046109e3565b610532565b61018e610600565b604051908152602001610109565b6100cb6101aa366004610ab2565b61062e565b61018e610796565b6000546101639062010000900460ff1681565b6101d26104c9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e20756e706175736500000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c56102bf60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610acd565b60009055565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b600054610100900460ff16158080156103105750600054600160ff909116105b8061032a5750303b15801561032a575060005460ff166001145b6103b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610288565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561041457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61041d836107e1565b8115610461576104616040518060400160405280601281526020017f496e697469616c697a657220706175736564000000000000000000000000000081525061085e565b80156104c457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006104fd6104f960017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610acd565b5490565b905090565b60006104fd6104f960017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610acd565b61053a6104c9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e20706175736500000000000000000000000000000000000000000000006064820152608401610288565b6105fd8161085e565b50565b61062b60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610acd565b81565b6106366104c9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5375706572636861696e436f6e6669673a206f6e6c7920677561726469616e2060448201527f63616e20656e61626c6520736166657479206d6f6465000000000000000000006064820152608401610288565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff16620100008315150217905560016040805183151560208201527f7b743789cff01dafdeae47739925425aab5dfd02d0c8229e4a508bcd2b9f42bb91015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261078b9161099a565b60405180910390a250565b61062b60017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610acd565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b9055565b61081461080f60017fd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe69610acd565b829055565b60006040805173ffffffffffffffffffffffffffffffffffffffff841660208201527f7b743789cff01dafdeae47739925425aab5dfd02d0c8229e4a508bcd2b9f42bb9101610753565b61089261088c60017f54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b7610acd565b60019055565b7fc32e6d5d6d1de257f64eac19ddb1f700ba13527983849c9486b1ab007ea28381816040516108c1919061099a565b60405180910390a150565b803580151581146108dc57600080fd5b919050565b600080604083850312156108f457600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461091857600080fd5b9150610926602084016108cc565b90509250929050565b6000815180845260005b8181101561095557602081850181015186830182015201610939565b81811115610967576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109ad602083018461092f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156109f557600080fd5b813567ffffffffffffffff80821115610a0d57600080fd5b818401915084601f830112610a2157600080fd5b813581811115610a3357610a336109b4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610a7957610a796109b4565b81604052828152876020848701011115610a9257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610ac457600080fd5b6109ad826108cc565b600082821015610b06577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea164736f6c634300080f000a"


func init() {
	if err := json.Unmarshal([]byte(SuperchainConfigStorageLayoutJSON), SuperchainConfigStorageLayout); err != nil {
		panic(err)
	}

	layouts["SuperchainConfig"] = SuperchainConfigStorageLayout
	deployedBytecodes["SuperchainConfig"] = SuperchainConfigDeployedBin
	immutableReferences["SuperchainConfig"] = false
}
